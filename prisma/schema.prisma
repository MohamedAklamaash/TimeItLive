// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url = env("POSTGRES_PRISMA_URL")
  url = env("DATABASE_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id String @id @default(uuid())
  username String @unique
  imageUrl String @db.Text
  externalUserid String @unique
  bio String? @db.Text
  created_At DateTime @default(now())
  updated_At DateTime @updatedAt

  following Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")

  blocking Block[] @relation("Blocking")
  blockedBy Block[] @relation("Blocked")

  stream Stream? @relation("streamer")
}


model Follow {
  id String @id @default(uuid())
  followerId String
  followingId String
  //follower 
  follower User @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  following User @relation(name:"FollowedBy",fields: [followingId],references: [id],onDelete: Cascade)
  created_At DateTime @default(now())
  updated_At DateTime @updatedAt
  @@unique([followerId,followingId])
  @@index([followerId])
  @@index([followingId])
}

model Block {
  id String @id @default(uuid())
  blockerId String
  blockedId String
  blocker User @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked User @relation(name: "Blocked", fields: [blockedId], references: [id], onDelete: Cascade)
  @@unique([blockedId,blockerId])
  @@index([blockedId])
  @@index([blockerId])
}

model Stream{
  id String @id @default(uuid()) 
  name String @db.Text
  thumbnailUrl String? @db.Text

  ingressId String? @unique
  serverUrl String? @db.Text
  streamkey String? @db.Text

  isLive Boolean @default(false)
  isChatEnabled Boolean @default(true)
  isChatDelayed Boolean @default(false)
  isChatFollowersOnly Boolean @default(false)

  userId String @unique
  user User @relation(name: "streamer",fields: [userId],references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([ingressId])
  // @@fulltext([name])
  
}